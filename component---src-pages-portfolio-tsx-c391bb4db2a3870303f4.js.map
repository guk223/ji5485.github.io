{"version":3,"sources":["webpack:///./src/components/molecules/Title.tsx","webpack:///./src/components/molecules/PortfolioItem.tsx","webpack:///./src/components/organisms/PortfolioList.tsx","webpack:///./src/components/templates/Portfolio.tsx","webpack:///./src/pages/portfolio.tsx"],"names":["TitleComponent","StyledLine","TextBox","align","MainTitle","Text","SubTitle","Title","title","subTitle","defaultProps","Index","ImageBox","LinkComponent","IconComponent","Image","Img","Content","PortfolioItemComponent","PortfolioItem","type","index","content","image","portfolioIndex","to","Icon","size","fluid","alt","PortfolioListComponent","List","PortfolioList","list","map","node","key","shortId","Portfolio","project","activity","PageTemplate","PORTFOLIO_PAGE_METADATA","description","siteUrl","PortfolioPage","data","Layout","edges","getPortfolioMetadata"],"mappings":"kJAaA,MAAMA,EAAiB,mBAAH,2CAAG,CAAH,sKAYdC,EAAa,mBAAH,uCAAG,CAAH,yGAUVC,EAAU,mBAAH,oCAAG,CAAH,cACG,EAAGC,WAAYA,EADlB,KAIPC,EAAY,YAAOC,IAAP,wCAAH,oGASTC,EAAW,YAAOD,IAAP,uCAAH,oGASRE,EAAuC,UAAU,MAAEC,EAAF,SAASC,EAAT,MAAmBN,IACxE,OACE,YAACH,EAAD,KACa,UAAVG,GAAqB,YAACF,EAAD,MAEtB,YAACC,EAAD,CAASC,MAAOA,GACd,YAACC,EAAD,KAAYI,GACZ,YAACF,EAAD,KAAWG,MAMnBF,EAAMG,aAAe,CACnBP,MAAO,QAGMI,O,qNCtDf,MAAMI,EAAQ,YAAON,IAAP,oCAAH,0DAKLO,EAAW,YAAOC,IAAP,uCAAH,2DAMVC,IANU,8KAoBRA,IApBQ,iBA0BRC,EAAQ,YAAOC,IAAP,oCAAH,4DAMLT,EAAQ,YAAOF,IAAP,oCAAH,4EAMLY,EAAU,mBAAH,oCAAG,CAAH,uMAYPC,EAAyB,mBAAH,mDAAG,CAAH,IA0BbC,MAxB8C,UAAU,KACrEC,EADqE,MAErEC,EAFqE,MAGrEb,EAHqE,QAIrEc,EAJqE,MAKrEC,IAEA,MAAMC,GAA0BH,EAAQ,GAAK,IAAM,IAAMA,EAEzD,OACE,YAACH,EAAD,KACE,YAACP,EAAD,KAAQa,EAAR,KAEA,YAACZ,EAAD,CAAUa,GAAK,cAAaL,KAAQC,KAClC,YAACK,EAAA,EAAD,CAAMN,KAAK,SAASO,KAAM,KAC1B,YAACZ,EAAD,CAAOa,MAAOL,EAAMK,MAAOC,IAAI,0BAGjC,YAAC,EAAD,KAAQrB,GACR,YAACS,EAAD,KAAUK,K,2NCpFhB,MAAMQ,EAAyB,mBAAH,kDAAG,CAAH,kDAMtBvB,EAAQ,YAAOF,IAAP,mCAAH,6EAML0B,EAAO,mBAAH,gCAAG,CAAH,0IAwBKC,MAd8C,UAAU,KAAEZ,EAAF,MAAQZ,EAAR,KAAeyB,IACpF,OACE,YAACH,EAAD,KACE,YAAC,EAAD,SAAStB,GAET,YAACuB,EAAD,KACGE,EAAKC,IAAI,EAAGC,QAA2Bd,IACtC,YAAC,EAAD,KAAmBc,EAAnB,CAAyBf,KAAMA,EAAMC,MAAOA,EAAQ,EAAGe,IAAKC,qB,YCrBvDC,MAVsC,UAAU,QAAEC,EAAF,SAAWC,IACxE,OACE,YAACC,EAAA,EAAD,KACE,YAAClC,EAAA,EAAD,CAAOC,MAAM,aAAaC,SAAS,6BACnC,YAAC,EAAD,CAAeW,KAAK,UAAUZ,MAAM,WAAWyB,KAAMM,IACrD,YAAC,EAAD,CAAenB,KAAK,WAAWZ,MAAM,aAAayB,KAAMO,MCE9D,MAAME,EAA0B,CAC9BlC,MAAO,yBACPmC,YACE,4EACFC,QAAS,sCAaIC,UAV8C,UAC3DC,MAAM,QAAEP,EAAF,SAAWC,KAEjB,OACE,YAACO,EAAA,EAAWL,EACV,YAAC,EAAD,CAAWH,QAASA,EAAQS,MAAOR,SAAUA,EAASQ,UAOrD,MAAMC,EAAuB","file":"component---src-pages-portfolio-tsx-c391bb4db2a3870303f4.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport Text from 'components/atoms/Text';\nimport styled from '@emotion/styled';\n\ntype TitleStyleProps = {\n  align: 'right' | 'left';\n};\n\ninterface TitleProps extends TitleStyleProps {\n  title: string;\n  subTitle: string;\n}\n\nconst TitleComponent = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 100px;\n\n  @media (max-width: 768px) {\n    margin-bottom: 60px;\n  }\n`;\n\nconst StyledLine = styled.div`\n  width: 50%;\n  height: 1px;\n  background: #1e1f21;\n\n  @media (max-width: 768px) {\n    width: 30%;\n  }\n`;\n\nconst TextBox = styled.div<TitleStyleProps>`\n  text-align: ${({ align }) => align};\n`;\n\nconst MainTitle = styled(Text)`\n  font-size: 60px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n`;\n\nconst SubTitle = styled(Text)`\n  font-size: 25px;\n  font-weight: 300;\n\n  @media (max-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nconst Title: FunctionComponent<TitleProps> = function ({ title, subTitle, align }) {\n  return (\n    <TitleComponent>\n      {align === 'right' && <StyledLine />}\n\n      <TextBox align={align}>\n        <MainTitle>{title}</MainTitle>\n        <SubTitle>{subTitle}</SubTitle>\n      </TextBox>\n    </TitleComponent>\n  );\n};\n\nTitle.defaultProps = {\n  align: 'left',\n};\n\nexport default Title;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport Text from 'components/atoms/Text';\nimport { LinkComponent } from 'components/atoms/Link';\nimport Icon, { IconComponent } from 'components/atoms/Icon';\nimport Img, { FluidObject } from 'gatsby-image';\n\nexport type PortfolioItemType = {\n  title: string;\n  content: string;\n  image: {\n    fluid: FluidObject;\n  };\n};\n\ninterface PortfolioItemProps extends PortfolioItemType {\n  type: 'project' | 'activity';\n  index: number;\n}\n\nconst Index = styled(Text)`\n  font-size: 25px;\n  font-weight: 700;\n`;\n\nconst ImageBox = styled(LinkComponent)`\n  width: 100%;\n  height: 200px;\n  margin: 10px 0;\n  position: relative;\n\n  ${IconComponent} {\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.7);\n    position: absolute;\n    display: grid;\n    place-items: center;\n    transition: 0.1s opacity;\n    opacity: 0;\n    color: #ffffff;\n    z-index: 5;\n  }\n\n  &:hover {\n    ${IconComponent} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Image = styled(Img)`\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n`;\n\nconst Title = styled(Text)`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 3px;\n`;\n\nconst Content = styled.div`\n  font-size: 15px;\n  font-weight: 400;\n  height: 3rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n`;\n\nconst PortfolioItemComponent = styled.div``;\n\nconst PortfolioItem: FunctionComponent<PortfolioItemProps> = function ({\n  type,\n  index,\n  title,\n  content,\n  image,\n}) {\n  const portfolioIndex: string = (index < 10 ? '0' : '') + index;\n\n  return (\n    <PortfolioItemComponent>\n      <Index>{portfolioIndex}.</Index>\n\n      <ImageBox to={`/portfolio/${type}/${index}`}>\n        <Icon type=\"search\" size={30} />\n        <Image fluid={image.fluid} alt=\"Portfolio Item Image\" />\n      </ImageBox>\n\n      <Title>{title}</Title>\n      <Content>{content}</Content>\n    </PortfolioItemComponent>\n  );\n};\n\nexport default PortfolioItem;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport Text from 'components/atoms/Text';\nimport PortfolioItem, { PortfolioItemType } from 'components/molecules/PortfolioItem';\nimport { shortId } from 'utilities/utils';\n\nexport interface PortfolioListProps {\n  type: 'project' | 'activity';\n  title: string;\n  list: [{ node: PortfolioItemType }];\n}\n\nconst PortfolioListComponent = styled.div`\n  & + & {\n    margin-top: 120px;\n  }\n`;\n\nconst Title = styled(Text)`\n  font-size: 40px;\n  font-weight: 700;\n  margin-bottom: 60px;\n`;\n\nconst List = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 30px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst PortfolioList: FunctionComponent<PortfolioListProps> = function ({ type, title, list }) {\n  return (\n    <PortfolioListComponent>\n      <Title>#{title}</Title>\n\n      <List>\n        {list.map(({ node }: PortfolioItemType, index: number) => (\n          <PortfolioItem {...node} type={type} index={index + 1} key={shortId()} />\n        ))}\n      </List>\n    </PortfolioListComponent>\n  );\n};\n\nexport default PortfolioList;\n","import React, { FunctionComponent } from 'react';\nimport Title from 'components/molecules/Title';\nimport PortfolioList, { PortfolioListProps } from 'components/organisms/PortfolioList';\nimport PageTemplate from 'components/templates/PageTemplate';\n\ninterface PortfolioProps {\n  project: PortfolioListProps.list;\n  activity: PortfolioListProps.list;\n}\n\nconst Portfolio: FunctionComponent<PortfolioProps> = function ({ project, activity }) {\n  return (\n    <PageTemplate>\n      <Title title=\"Portfolio.\" subTitle=\"My Projects & Activities\" />\n      <PortfolioList type=\"project\" title=\"Projects\" list={project} />\n      <PortfolioList type=\"activity\" title=\"Activities\" list={activity} />\n    </PageTemplate>\n  );\n};\n\nexport default Portfolio;\n","import React, { FunctionComponent } from 'react';\nimport { PortfolioListProps } from 'components/organisms/PortfolioList';\nimport Layout from 'components/templates/Layout';\nimport Portfolio from 'components/templates/Portfolio';\nimport { graphql } from 'gatsby';\n\ninterface PortfolioPageProps {\n  data: {\n    project: {\n      edges: PortfolioListProps.list;\n    };\n    activity: {\n      edges: PortfolioListProps.list;\n    };\n  };\n}\n\nconst PORTFOLIO_PAGE_METADATA = {\n  title: 'Portfolios in Dev Life',\n  description:\n    '개발자가 되고 싶다고 생각한 이후로 만든 프로젝트에 대한 설명과 그동안 여러 대회에 참석하면서 생각한 느낀 점과 결과를 담았습니다.',\n  siteUrl: 'https://ji5485.github.io/portfolio',\n};\n\nconst PortfolioPage: FunctionComponent<PortfolioPageProps> = function ({\n  data: { project, activity },\n}) {\n  return (\n    <Layout {...PORTFOLIO_PAGE_METADATA}>\n      <Portfolio project={project.edges} activity={activity.edges} />\n    </Layout>\n  );\n};\n\nexport default PortfolioPage;\n\nexport const getPortfolioMetadata = graphql`\n  fragment PortfolioData on PortfolioMetadata {\n    title\n    content\n    image {\n      fluid(maxWidth: 720, maxHeight: 200, fit: OUTSIDE, quality: 80) {\n        ...GatsbyImageSharpFluid_withWebp\n      }\n    }\n  }\n\n  query getAllPortfolioMetadata {\n    project: allPortfolioMetadata(filter: { type: { eq: \"project\" } }) {\n      edges {\n        node {\n          ...PortfolioData\n        }\n      }\n    }\n    activity: allPortfolioMetadata(filter: { type: { eq: \"activity\" } }) {\n      edges {\n        node {\n          ...PortfolioData\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}