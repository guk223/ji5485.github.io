{"version":3,"sources":["webpack:///./src/components/molecules/Title.tsx","webpack:///./src/components/molecules/CategoryList.tsx","webpack:///./src/components/molecules/PostItem.tsx","webpack:///./src/components/organisms/PostList.tsx","webpack:///./src/components/molecules/PaginationButton.tsx","webpack:///./src/components/organisms/Pagination.tsx","webpack:///./src/components/templates/BlogPostList.tsx","webpack:///./src/page_template/BlogPostListTemplate.tsx"],"names":["TitleComponent","StyledLine","TextBox","align","MainTitle","Text","SubTitle","Title","title","subTitle","defaultProps","CategoryListComponent","LinkComponent","CategoryList","categories","Object","keys","map","category","url","splitOnUpper","count","Link","to","key","shortId","PostItemComponent","Content","Category","Date","Summary","ThumbnailImage","Img","PostItem","summary","date","thumbnail","childImageSharp","fixed","slug","dateFormat","alt","PostListComponent","PostList","list","node","fields","frontmatter","PaginationButtonComponent","PaginationButton","page","activeClassName","PaginationComponent","PageMoveIcon","active","IconComponent","Pagination","totalPage","currentPage","currentPosition","Math","floor","prev","next","returnPageLink","Icon","type","size","index","BlogPostList","context","slicedCategory","substring","length","categoryTitle","PageTemplate","BlogPostListTemplate","data","pageContext","selectedCategory","restPageContext","filtered","unfiltered","Layout","description","edges","blogCategoryQuery"],"mappings":"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","file":"component---src-page-template-blog-post-list-template-tsx-4ac9b56930592fe8c8e3.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport Text from 'components/atoms/Text';\nimport styled from '@emotion/styled';\n\ntype TitleStyleProps = {\n  align: 'right' | 'left';\n};\n\ninterface TitleProps extends TitleStyleProps {\n  title: string;\n  subTitle: string;\n}\n\nconst TitleComponent = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 100px;\n\n  @media (max-width: 768px) {\n    margin-bottom: 60px;\n  }\n`;\n\nconst StyledLine = styled.div`\n  width: 50%;\n  height: 1px;\n  background: #1e1f21;\n\n  @media (max-width: 768px) {\n    width: 30%;\n  }\n`;\n\nconst TextBox = styled.div<TitleStyleProps>`\n  text-align: ${({ align }) => align};\n`;\n\nconst MainTitle = styled(Text)`\n  font-size: 60px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    font-size: 30px;\n  }\n`;\n\nconst SubTitle = styled(Text)`\n  font-size: 25px;\n  font-weight: 300;\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`;\n\nconst Title: FunctionComponent<TitleProps> = function ({ title, subTitle, align }) {\n  return (\n    <TitleComponent>\n      {align === 'right' && <StyledLine />}\n\n      <TextBox align={align}>\n        <MainTitle>{title}</MainTitle>\n        <SubTitle>{subTitle}</SubTitle>\n      </TextBox>\n    </TitleComponent>\n  );\n};\n\nTitle.defaultProps = {\n  align: 'left',\n};\n\nexport default Title;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport Link, { LinkComponent } from 'components/atoms/Link';\nimport { shortId, splitOnUpper } from 'utilities/utils';\n\nexport interface CategoryListProps {\n  categories: {\n    [key: string]: number;\n  };\n}\n\nconst CategoryListComponent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: -5px -10px;\n  margin-bottom: 60px;\n\n  ${LinkComponent} {\n    font-size: 13px;\n    font-weight: 700;\n    margin: 5px 10px;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  @media (max-width: 768px) {\n    margin-bottom: 40px;\n  }\n`;\n\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({ categories }) {\n  return (\n    <CategoryListComponent>\n      {Object.keys(categories).map((category: string) => {\n        const url = `/blog/${splitOnUpper(category)}/1`;\n        const count: number = categories[category];\n\n        return (\n          <Link to={url} key={shortId()}>\n            #{category}({count})\n          </Link>\n        );\n      })}\n    </CategoryListComponent>\n  );\n};\n\nexport default CategoryList;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport Link, { LinkComponent } from 'components/atoms/Link';\nimport Text from 'components/atoms/Text';\nimport { dateFormat, shortId, splitOnUpper } from 'utilities/utils';\nimport Img, { FixedObject } from 'gatsby-image';\n\nexport interface PostItemProps {\n  title: string;\n  summary: string;\n  date: string;\n  thumbnail: {\n    childImageSharp: {\n      fixed: FixedObject;\n    };\n  };\n  categories: string[];\n  slug: string;\n}\n\nconst PostItemComponent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  padding: 20px 0;\n  border-top: 1px solid #1e1f21;\n  border-bottom: 1px solid #1e1f21;\n\n  & + & {\n    border-top: none;\n  }\n\n  body.dark & {\n    border-color: #ffffff;\n  }\n`;\n\nconst Content = styled.div`\n  width: calc(100% - 200px);\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Title = styled(LinkComponent)`\n  font-size: 23px;\n  font-weight: 400;\n  margin-bottom: 5px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  @media (min-width: 769px) {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 3px;\n\n  ${LinkComponent} {\n    font-size: 14px;\n    font-weight: 400;\n    opacity: 0.75;\n    margin-right: 10px;\n\n    @media (max-width: 768px) {\n      font-size: 12px;\n    }\n  }\n\n  ${LinkComponent}:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Date = styled(Text)`\n  font-size: 14px;\n  font-weight: 400;\n  opacity: 0.7;\n  margin-bottom: 10px;\n\n  @media (max-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\nconst Summary = styled(Text)`\n  font-size: 15px;\n  font-weight: 300;\n  opacity: 0.9;\n  margin-top: auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: normal;\n  word-wrap: break-word;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n\n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`;\n\nconst ThumbnailImage = styled(Img)`\n  @media (max-width: 768px) {\n    display: none !important;\n  }\n`;\n\nconst PostItem: FunctionComponent<PostItemProps> = function ({\n  title,\n  summary,\n  date,\n  thumbnail: {\n    childImageSharp: { fixed },\n  },\n  categories,\n  slug,\n}) {\n  return (\n    <PostItemComponent>\n      <Content>\n        <Title to={slug}>{title}</Title>\n        <Category>\n          {categories.map((category: string) => (\n            <Link to={`/blog/${splitOnUpper(category)}/1`} key={shortId()}>\n              #{category}\n            </Link>\n          ))}\n        </Category>\n        <Date>{dateFormat(date)}</Date>\n        <Summary>{summary}</Summary>\n      </Content>\n\n      <ThumbnailImage fixed={fixed} alt=\"Thumbnail Image\" />\n    </PostItemComponent>\n  );\n};\n\nexport default PostItem;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport PostItem from 'components/molecules/PostItem';\nimport { shortId } from 'utilities/utils';\nimport { FixedObject } from 'gatsby-image';\n\ntype PostItemType = {\n  node: {\n    fields: {\n      slug: string;\n    };\n    frontmatter: {\n      title: string;\n      summary: string[];\n      date: string;\n      categories: string[];\n      thumbnail: {\n        childImageSharp: {\n          fixed: FixedObject;\n        };\n      };\n    };\n  };\n};\n\nexport interface PostListProps {\n  list: PostItemType[];\n}\n\nconst PostListComponent = styled.div``;\n\nconst PostList: FunctionComponent<PostListProps> = function ({ list }) {\n  return (\n    <PostListComponent>\n      {list.map(({ node: { fields: { slug }, frontmatter } }: PostItemType) => (\n        <PostItem slug={slug} {...frontmatter} key={shortId()} />\n      ))}\n    </PostListComponent>\n  );\n};\n\nexport default PostList;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { LinkComponent } from 'components/atoms/Link';\n\ninterface PaginationButtonProps {\n  to: string;\n  page: number;\n}\n\nconst PaginationButtonComponent = styled(LinkComponent)`\n  width: 25px;\n  height: 25px;\n  border: 1px solid #1e1f21;\n  font-size: 17px;\n  font-weight: 700;\n  display: grid;\n  place-items: center;\n  color: #1e1f21;\n\n  & + & {\n    margin-left: 10px;\n  }\n\n  &.active {\n    background: #1e1f21;\n    color: white;\n  }\n`;\n\nconst PaginationButton: FunctionComponent<PaginationButtonProps> = function ({ to, page }) {\n  return (\n    <PaginationButtonComponent to={to} activeClassName=\"active\">\n      {page}\n    </PaginationButtonComponent>\n  );\n};\n\nexport default PaginationButton;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport Icon, { IconComponent } from 'components/atoms/Icon';\nimport { LinkComponent } from 'components/atoms/Link';\nimport PaginationButton from 'components/molecules/PaginationButton';\nimport { shortId } from 'utilities/utils';\n\nexport interface PaginationProps {\n  totalPage: number;\n  currentPage: number;\n  category: string;\n}\n\nconst PaginationComponent = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 80px;\n`;\n\nconst PageMoveIcon = styled(LinkComponent)<{ active: number }>`\n  cursor: pointer;\n  pointer-events: ${({ active }) => (active ? 'initial' : 'none')};\n  padding: 0 10px;\n\n  ${IconComponent} {\n    color: ${({ active }) => (active ? 'initial' : 'rgba(0, 0, 0, 0.3)')};\n  }\n`;\n\nconst Pagination: FunctionComponent<PaginationProps> = function ({\n  totalPage,\n  currentPage,\n  category,\n}) {\n  const currentPosition = Math.floor((currentPage - 1) / 5) + 1;\n  const prev = currentPosition === 1 ? null : (currentPosition - 1) * 5;\n  const next =\n    currentPosition === Math.floor((totalPage - 1) / 5) + 1 ? null : currentPosition * 5 + 1;\n\n  const returnPageLink = (page: number | null): string =>\n    `/blog${category ? `/${category}` : ''}/${page}`;\n\n  return (\n    <PaginationComponent>\n      <PageMoveIcon to={returnPageLink(prev)} active={prev ? 1 : 0}>\n        <Icon type=\"caretLeft\" size={17} />\n      </PageMoveIcon>\n\n      {[1, 2, 3, 4, 5].map((index: number) => {\n        const page = (currentPosition - 1) * 5 + index;\n        return (\n          page <= totalPage && (\n            <PaginationButton to={returnPageLink(page)} page={page} key={shortId()} />\n          )\n        );\n      })}\n\n      <PageMoveIcon to={returnPageLink(next)} active={next ? 1 : 0}>\n        <Icon type=\"caretRight\" size={17} />\n      </PageMoveIcon>\n    </PaginationComponent>\n  );\n};\n\nexport default Pagination;\n","import React, { FunctionComponent } from 'react';\nimport Title from 'components/molecules/Title';\nimport CategoryList, { CategoryListProps } from 'components/molecules/CategoryList';\nimport PostList, { PostListProps } from 'components/organisms/PostList';\nimport Pagination, { PaginationProps } from 'components/organisms/Pagination';\nimport PageTemplate from 'components/templates/PageTemplate';\n\nexport interface BlogPostListProps {\n  list: PostListProps.list;\n  context: PaginationProps | CategoryListProps;\n}\n\nconst BlogPostList: FunctionComponent<BlogPostListProps> = function ({\n  list,\n  context: { totalPage, currentPage, categories, category },\n}) {\n  const slicedCategory = category ? category.substring(1, category.length - 1) : null;\n  const categoryTitle = slicedCategory ? `#${slicedCategory}` : '';\n\n  return (\n    <PageTemplate>\n      <Title title={`Blog${categoryTitle}.`} subTitle=\"Development, Record\" />\n      <CategoryList categories={categories} />\n      <PostList list={list} />\n      {totalPage > 1 && (\n        <Pagination totalPage={totalPage} currentPage={currentPage} category={slicedCategory} />\n      )}\n    </PageTemplate>\n  );\n};\n\nexport default BlogPostList;\n","import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from 'components/templates/Layout';\nimport { CategoryListProps } from 'components/molecules/CategoryList';\nimport { PostListProps } from 'components/organisms/PostList';\nimport { PaginationProps } from 'components/organisms/Pagination';\nimport BlogPostList from 'components/templates/BlogPostList';\n\ninterface BlogPostListTemplateProps {\n  data: {\n    filtered?: {\n      edges: PostListProps;\n    };\n    unfiltered?: {\n      edges: PostListProps;\n    };\n  };\n  pageContext:\n    | PaginationProps\n    | CategoryListProps\n    | { category: string; selectedCategory: boolean };\n}\n\nconst BlogPostListTemplate: FunctionComponent<BlogPostListTemplateProps> = function ({\n  data,\n  pageContext: { selectedCategory, ...restPageContext },\n}) {\n  const list: PostListProps = selectedCategory ? data.filtered : data.unfiltered;\n\n  return (\n    <Layout\n      title=\"Dev Log List\"\n      description=\"개발자 Hyun이 지금까지 활동하면서 작성한 Dev Log 목록입니다.\"\n    >\n      <BlogPostList list={list.edges} context={restPageContext} />\n    </Layout>\n  );\n};\n\nexport default BlogPostListTemplate;\n\nexport const blogCategoryQuery = graphql`\n  fragment MarkdownData on MarkdownRemark {\n    frontmatter {\n      title\n      summary\n      date\n      categories\n      thumbnail {\n        childImageSharp {\n          fixed(width: 180, height: 130, quality: 80) {\n            ...GatsbyImageSharpFixed_withWebp\n          }\n        }\n      }\n    }\n    fields {\n      slug\n    }\n  }\n\n  query blogListQuery($skip: Int!, $selectedCategory: Boolean!, $category: String) {\n    filtered: allMarkdownRemark(\n      filter: { frontmatter: { categories: { regex: $category } } }\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n      skip: $skip\n      limit: 10\n    ) @include(if: $selectedCategory) {\n      edges {\n        node {\n          ...MarkdownData\n        }\n      }\n    }\n\n    unfiltered: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n      skip: $skip\n      limit: 10\n    ) @skip(if: $selectedCategory) {\n      edges {\n        node {\n          ...MarkdownData\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}