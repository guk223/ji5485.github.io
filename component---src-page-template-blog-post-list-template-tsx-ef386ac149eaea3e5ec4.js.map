{"version":3,"sources":["webpack:///./src/components/molecules/Title.tsx","webpack:///./src/utils/splitOnUpper.ts","webpack:///./src/components/molecules/CategoryList.tsx","webpack:///./src/components/molecules/PostItem.tsx","webpack:///./src/components/organisms/PostList.tsx","webpack:///./src/components/molecules/PaginationButton.tsx","webpack:///./src/components/organisms/Pagination.tsx","webpack:///./src/components/templates/BlogPostList.tsx","webpack:///./src/page_template/BlogPostListTemplate.tsx"],"names":["TitleComponent","StyledLine","TextBox","align","MainTitle","Text","SubTitle","Title","title","subTitle","defaultProps","splitOnUpper","str","split","reduce","acc","cur","push","toLowerCase","join","CategoryListComponent","LinkComponent","CategoryList","categories","Object","keys","map","category","url","count","Link","to","key","shortId","PostItemComponent","Content","Category","Summary","TextComponent","ThumbnailImage","PostItem","summary","date","thumbnail","childImageSharp","resize","src","slug","sentence","alt","PostListComponent","PostList","list","node","fields","frontmatter","PaginationButtonComponent","PaginationButton","page","activeClassName","PaginationComponent","PageMoveIcon","active","IconComponent","Pagination","totalPage","currentPage","currentPosition","Math","floor","prev","next","returnPageLink","Icon","type","size","index","BlogPostList","context","slicedCategory","substring","length","categoryTitle","PageTemplate","BlogPostListTemplate","data","pageContext","selectedCategory","restPageContext","filtered","unfiltered","Layout","edges","blogCategoryQuery"],"mappings":"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","file":"component---src-page-template-blog-post-list-template-tsx-ef386ac149eaea3e5ec4.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport Text from 'components/atoms/Text';\nimport styled from '@emotion/styled';\n\ntype TitleStyleProps = {\n  align: 'right' | 'left';\n};\n\ninterface TitleProps extends TitleStyleProps {\n  title: string;\n  subTitle: string;\n}\n\nconst TitleComponent = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 100px;\n\n  @media (max-width: 768px) {\n    margin-bottom: 60px;\n  }\n`;\n\nconst StyledLine = styled.div`\n  width: 50%;\n  height: 1px;\n  background: #1e1f21;\n\n  @media (max-width: 768px) {\n    width: 30%;\n  }\n`;\n\nconst TextBox = styled.div<TitleStyleProps>`\n  text-align: ${({ align }) => align};\n`;\n\nconst MainTitle = styled(Text)`\n  font-size: 60px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n`;\n\nconst SubTitle = styled(Text)`\n  font-size: 30px;\n  font-weight: 100;\n\n  @media (max-width: 768px) {\n    font-size: 25px;\n  }\n`;\n\nconst Title: FunctionComponent<TitleProps> = function ({ title, subTitle, align }) {\n  return (\n    <TitleComponent>\n      {align === 'right' && <StyledLine />}\n\n      <TextBox align={align}>\n        <MainTitle>{title}</MainTitle>\n        <SubTitle>{subTitle}</SubTitle>\n      </TextBox>\n    </TitleComponent>\n  );\n};\n\nTitle.defaultProps = {\n  align: 'left',\n};\n\nexport default Title;\n","function splitOnUpper(str: string): string {\n  const lowerCaseArr: string[] = str\n    .split(/(?=[A-Z])/)\n    .reduce((acc: string[], cur: string): string[] => {\n      acc.push(cur.toLowerCase());\n      return acc;\n    }, []);\n\n  return lowerCaseArr.join('-');\n}\n\nexport default splitOnUpper;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport Link, { LinkComponent } from 'components/atoms/Link';\nimport splitOnUpper from 'utilities/splitOnUpper';\nimport shortId from 'utilities/shortId';\n\nexport interface CategoryListProps {\n  categories: {\n    [key: string]: number;\n  };\n}\n\nconst CategoryListComponent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: -5px -10px;\n  margin-bottom: 60px;\n\n  ${LinkComponent} {\n    font-size: 14px;\n    font-weight: 700;\n    margin: 5px 10px;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  @media (max-width: 768px) {\n    margin-bottom: 40px;\n  }\n`;\n\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({ categories }) {\n  return (\n    <CategoryListComponent>\n      {Object.keys(categories).map((category: string) => {\n        const url = `/blog/${splitOnUpper(category)}/1`;\n        const count: number = categories[category];\n\n        return (\n          <Link to={url} key={shortId()}>\n            #{category}({count})\n          </Link>\n        );\n      })}\n    </CategoryListComponent>\n  );\n};\n\nexport default CategoryList;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport Link, { LinkComponent } from 'components/atoms/Link';\nimport Text, { TextComponent } from 'components/atoms/Text';\nimport splitOnUpper from 'utilities/splitOnUpper';\nimport shortId from 'utilities/shortId';\n\nexport interface PostItemProps {\n  title: string;\n  summary: string[];\n  date: string;\n  thumbnail: {\n    childImageSharp: {\n      resize: {\n        src: string;\n      };\n    };\n  };\n  categories: string[];\n  slug: string;\n}\n\nconst PostItemComponent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  padding: 20px 0;\n  border-top: 1px solid #1e1f21;\n  border-bottom: 1px solid #1e1f21;\n\n  & + & {\n    border-top: none;\n  }\n\n  body.dark & {\n    border-color: #ffffff;\n  }\n`;\n\nconst Content = styled.div`\n  width: calc(100% - 200px);\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Title = styled(LinkComponent)`\n  font-size: 25px;\n  font-weight: 400;\n  margin-bottom: 5px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 10px;\n\n  ${LinkComponent} {\n    font-size: 14px;\n    font-weight: 400;\n    opacity: 0.75;\n    margin-right: 10px;\n\n    @media (max-width: 768px) {\n      font-size: 12px;\n    }\n  }\n\n  ${LinkComponent}:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Summary = styled(TextComponent)`\n  font-size: 15px;\n  font-weight: 400;\n  opacity: 0.9;\n  margin-top: auto;\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nconst ThumbnailImage = styled.img`\n  width: 180px;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst PostItem: FunctionComponent<PostItemProps> = function ({\n  title,\n  summary,\n  date,\n  thumbnail: {\n    childImageSharp: {\n      resize: { src },\n    },\n  },\n  categories,\n  slug,\n}) {\n  return (\n    <PostItemComponent>\n      <Content>\n        <Title to={slug}>{title}</Title>\n        <div>{date}</div>\n        <Category>\n          {categories.map((category) => (\n            <Link to={`/blog/${splitOnUpper(category)}/1`} key={shortId()}>\n              #{category}\n            </Link>\n          ))}\n        </Category>\n        <Summary>\n          {summary.map((sentence) => (\n            <Text key={shortId()}>{sentence}</Text>\n          ))}\n        </Summary>\n      </Content>\n\n      <ThumbnailImage src={src} alt=\"Thumbnail Image\" />\n    </PostItemComponent>\n  );\n};\n\nexport default PostItem;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport PostItem from 'components/molecules/PostItem';\nimport shortId from 'utilities/shortId';\n\nexport interface PostListProps {\n  list: [\n    {\n      node: {\n        fields: {\n          slug: string;\n        };\n        frontmatter: {\n          title: string;\n          summary: string[];\n          date: string;\n          categories: string[];\n          thumbnail: {\n            childImageSharp: {\n              resize: {\n                src: string;\n              };\n            };\n          };\n        };\n      };\n    },\n  ];\n}\n\nconst PostListComponent = styled.div``;\n\nconst PostList: FunctionComponent<PostListProps> = function ({ list }) {\n  return (\n    <PostListComponent>\n      {list.map(({ node: { fields: { slug }, frontmatter } }) => (\n        <PostItem slug={slug} {...frontmatter} key={shortId()} />\n      ))}\n    </PostListComponent>\n  );\n};\n\nexport default PostList;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { LinkComponent } from 'components/atoms/Link';\n\ninterface PaginationButtonProps {\n  to: string;\n  page: number;\n}\n\nconst PaginationButtonComponent = styled(LinkComponent)`\n  width: 25px;\n  height: 25px;\n  border: 1px solid #1e1f21;\n  font-size: 17px;\n  font-weight: 700;\n  display: grid;\n  place-items: center;\n  color: #1e1f21;\n\n  & + & {\n    margin-left: 10px;\n  }\n\n  &.active {\n    background: #1e1f21;\n    color: white;\n  }\n`;\n\nconst PaginationButton: FunctionComponent<PaginationButtonProps> = function ({ to, page }) {\n  return (\n    <PaginationButtonComponent to={to} activeClassName=\"active\">\n      {page}\n    </PaginationButtonComponent>\n  );\n};\n\nexport default PaginationButton;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport Icon, { IconComponent } from 'components/atoms/Icon';\nimport { LinkComponent } from 'components/atoms/Link';\nimport PaginationButton from 'components/molecules/PaginationButton';\nimport shortId from 'utilities/shortId';\n\nexport interface PaginationProps {\n  totalPage: number;\n  currentPage: number;\n  category: string;\n}\n\nconst PaginationComponent = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 80px;\n`;\n\nconst PageMoveIcon = styled(LinkComponent)<{ active: number }>`\n  cursor: pointer;\n  pointer-events: ${({ active }) => (active ? 'initial' : 'none')};\n  padding: 0 10px;\n\n  ${IconComponent} {\n    color: ${({ active }) => (active ? 'initial' : 'rgba(0, 0, 0, 0.3)')};\n  }\n`;\n\nconst Pagination: FunctionComponent<PaginationProps> = function ({\n  totalPage,\n  currentPage,\n  category,\n}) {\n  const currentPosition = Math.floor((currentPage - 1) / 5) + 1;\n  const prev = currentPosition === 1 ? null : (currentPosition - 1) * 5;\n  const next =\n    currentPosition === Math.floor((totalPage - 1) / 5) + 1 ? null : currentPosition * 5 + 1;\n\n  const returnPageLink = (page: number | null): string =>\n    `/blog${category ? `/${category}` : ''}/${page}`;\n\n  return (\n    <PaginationComponent>\n      <PageMoveIcon to={returnPageLink(prev)} active={prev ? 1 : 0}>\n        <Icon type=\"caretLeft\" size={17} />\n      </PageMoveIcon>\n\n      {[1, 2, 3, 4, 5].map((index) => {\n        const page = (currentPosition - 1) * 5 + index;\n        return (\n          page <= totalPage && (\n            <PaginationButton to={returnPageLink(page)} page={page} key={shortId()} />\n          )\n        );\n      })}\n\n      <PageMoveIcon to={returnPageLink(next)} active={next ? 1 : 0}>\n        <Icon type=\"caretRight\" size={17} />\n      </PageMoveIcon>\n    </PaginationComponent>\n  );\n};\n\nexport default Pagination;\n","import React, { FunctionComponent } from 'react';\nimport Title from 'components/molecules/Title';\nimport CategoryList, { CategoryListProps } from 'components/molecules/CategoryList';\nimport PostList, { PostListProps } from 'components/organisms/PostList';\nimport Pagination, { PaginationProps } from 'components/organisms/Pagination';\nimport PageTemplate from 'components/templates/PageTemplate';\n\nexport interface BlogPostListProps {\n  list: PostListProps.list;\n  context: PaginationProps | CategoryListProps;\n}\n\nconst BlogPostList: FunctionComponent<BlogPostListProps> = function ({\n  list,\n  context: { totalPage, currentPage, categories, category },\n}) {\n  const slicedCategory = category ? category.substring(1, category.length - 1) : null;\n  const categoryTitle = slicedCategory ? `#${slicedCategory}` : '';\n\n  return (\n    <PageTemplate>\n      <Title title={`Blog${categoryTitle}.`} subTitle=\"Development, Record\" />\n      <CategoryList categories={categories} />\n      <PostList list={list} />\n      {totalPage > 1 && (\n        <Pagination totalPage={totalPage} currentPage={currentPage} category={slicedCategory} />\n      )}\n    </PageTemplate>\n  );\n};\n\nexport default BlogPostList;\n","import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from 'components/templates/Layout';\nimport { CategoryListProps } from 'components/molecules/CategoryList';\nimport { BlogCategoryListProps } from 'components/organisms/BlogCategoryList';\nimport { PaginationProps } from 'components/organisms/Pagination';\nimport BlogPostList from 'components/templates/BlogPostList';\n\ninterface BlogPostListTemplateProps {\n  data: {\n    filtered?: {\n      edges: BlogCategoryListProps.list;\n    };\n    unfiltered?: {\n      edges: BlogCategoryListProps.list;\n    };\n  };\n  pageContext:\n    | PaginationProps\n    | CategoryListProps\n    | { category: string; selectedCategory: boolean };\n}\n\nconst BlogPostListTemplate: FunctionComponent<BlogPostListTemplateProps> = function ({\n  data,\n  pageContext: { selectedCategory, ...restPageContext },\n}) {\n  const list: BlogCategoryListProps.list = selectedCategory ? data.filtered : data.unfiltered;\n\n  return (\n    <Layout>\n      <BlogPostList list={list.edges} context={restPageContext} />\n    </Layout>\n  );\n};\n\nexport default BlogPostListTemplate;\n\nexport const blogCategoryQuery = graphql`\n  query blogListQuery($skip: Int!, $selectedCategory: Boolean!, $category: String) {\n    filtered: allMarkdownRemark(\n      filter: { frontmatter: { categories: { regex: $category } } }\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n      skip: $skip\n      limit: 10\n    ) @include(if: $selectedCategory) {\n      edges {\n        node {\n          frontmatter {\n            title\n            summary\n            date\n            categories\n            thumbnail {\n              childImageSharp {\n                resize(fit: COVER, width: 180, height: 130) {\n                  src\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n\n    unfiltered: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n      skip: $skip\n      limit: 10\n    ) @skip(if: $selectedCategory) {\n      edges {\n        node {\n          frontmatter {\n            title\n            summary\n            date\n            categories\n            thumbnail {\n              childImageSharp {\n                resize(fit: COVER, width: 180, height: 130) {\n                  src\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}