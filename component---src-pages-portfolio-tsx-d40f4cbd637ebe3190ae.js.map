{"version":3,"sources":["webpack:///./src/components/molecules/Title.tsx","webpack:///./src/components/molecules/PortfolioItem.tsx","webpack:///./src/components/organisms/PortfolioList.tsx","webpack:///./src/components/templates/Portfolio.tsx","webpack:///./src/pages/portfolio.tsx","webpack:///./src/utils/imageLinkGenerator.ts"],"names":["TitleComponent","StyledLine","TextBox","align","MainTitle","Text","SubTitle","Title","title","subTitle","defaultProps","Index","ImageBox","LinkComponent","IconComponent","Image","Content","PortfolioItemComponent","PortfolioItem","type","index","content","image","portfolioIndex","to","Icon","color","size","src","generateImageLink","alt","PortfolioListComponent","List","PortfolioList","list","map","props","key","shortId","Portfolio","PageTemplate","PORTFOLIO_LIST","project","activity","PortfolioPage","Layout"],"mappings":"kJAaA,MAAMA,EAAiB,mBAAH,2CAAG,CAAH,sKAYdC,EAAa,mBAAH,uCAAG,CAAH,yGAUVC,EAAU,mBAAH,oCAAG,CAAH,cACG,EAAGC,WAAYA,EADlB,KAIPC,EAAY,YAAOC,IAAP,wCAAH,oGASTC,EAAW,YAAOD,IAAP,uCAAH,oGASRE,EAAuC,UAAU,MAAEC,EAAF,SAASC,EAAT,MAAmBN,IACxE,OACE,YAACH,EAAD,KACa,UAAVG,GAAqB,YAACF,EAAD,MAEtB,YAACC,EAAD,CAASC,MAAOA,GACd,YAACC,EAAD,KAAYI,GACZ,YAACF,EAAD,KAAWG,MAMnBF,EAAMG,aAAe,CACnBP,MAAO,QAGMI,O,uJC3Df,MAAMI,EAAQ,YAAON,IAAP,oCAAH,0DAKLO,EAAW,YAAOC,IAAP,uCAAH,2DAMVC,IANU,sJAkBRA,IAlBQ,iBAwBRC,EAAQ,mBAAH,kCAAG,CAAH,kEAMLR,EAAQ,YAAOF,IAAP,oCAAH,4EAMLW,EAAU,mBAAH,oCAAG,CAAH,uMAYPC,EAAyB,mBAAH,mDAAG,CAAH,IA0BbC,MAxB8C,UAAU,KACrEC,EADqE,MAErEC,EAFqE,MAGrEZ,EAHqE,QAIrEa,EAJqE,MAKrEC,IAEA,MAAMC,GAA0BH,EAAQ,GAAK,IAAM,IAAMA,EAEzD,OACE,YAACH,EAAD,KACE,YAACN,EAAD,KAAQY,EAAR,KAEA,YAACX,EAAD,CAAUY,GAAK,cAAaL,KAAQC,KAClC,YAACK,EAAA,EAAD,CAAMN,KAAK,SAASO,MAAM,UAAUC,KAAM,KAC1C,YAACZ,EAAD,CAAOa,IAAKC,YAAkBP,GAAQQ,IAAI,0BAG5C,YAAC,EAAD,KAAQtB,GACR,YAACQ,EAAD,KAAUK,K,2NCvET,MAAMU,EAAyB,mBAAH,kDAAG,CAAH,kDAM7BxB,EAAQ,YAAOF,IAAP,mCAAH,6EAML2B,EAAO,mBAAH,gCAAG,CAAH,0IAwBKC,MAd8C,UAAU,KAAEd,EAAF,MAAQX,EAAR,KAAe0B,IACpF,OACE,YAACH,EAAD,KACE,YAAC,EAAD,SAASvB,GAET,YAACwB,EAAD,KACGE,EAAKC,IAAI,CAACC,EAAOhB,IAChB,YAAC,EAAD,KAAmBgB,EAAnB,CAA0BjB,KAAMA,EAAMC,MAAOA,EAAQ,EAAGiB,IAAKC,qB,wBC/BxDC,MAV0B,aACvC,OACE,YAACC,EAAA,EAAD,KACE,YAACjC,EAAA,EAAD,CAAOC,MAAM,aAAaC,SAAS,6BACnC,YAAC,EAAD,CAAeU,KAAK,UAAUX,MAAM,WAAW0B,KAAMO,EAAeC,UACpE,YAAC,EAAD,CAAevB,KAAK,WAAWX,MAAM,aAAa0B,KAAMO,EAAeE,aCC9DC,UAR8B,aAC3C,OACE,YAACC,EAAA,EAAD,KACE,YAAC,EAAD,S,uybCHShB,IAJf,SAA2BP,GACzB,MAAQ,0BAAyBA","file":"component---src-pages-portfolio-tsx-d40f4cbd637ebe3190ae.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport Text from 'components/atoms/Text';\nimport styled from '@emotion/styled';\n\ntype TitleStyleProps = {\n  align: 'right' | 'left';\n};\n\ninterface TitleProps extends TitleStyleProps {\n  title: string;\n  subTitle: string;\n}\n\nconst TitleComponent = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 100px;\n\n  @media (max-width: 768px) {\n    margin-bottom: 60px;\n  }\n`;\n\nconst StyledLine = styled.div`\n  width: 50%;\n  height: 1px;\n  background: #1e1f21;\n\n  @media (max-width: 768px) {\n    width: 30%;\n  }\n`;\n\nconst TextBox = styled.div<TitleStyleProps>`\n  text-align: ${({ align }) => align};\n`;\n\nconst MainTitle = styled(Text)`\n  font-size: 60px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n`;\n\nconst SubTitle = styled(Text)`\n  font-size: 25px;\n  font-weight: 300;\n\n  @media (max-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nconst Title: FunctionComponent<TitleProps> = function ({ title, subTitle, align }) {\n  return (\n    <TitleComponent>\n      {align === 'right' && <StyledLine />}\n\n      <TextBox align={align}>\n        <MainTitle>{title}</MainTitle>\n        <SubTitle>{subTitle}</SubTitle>\n      </TextBox>\n    </TitleComponent>\n  );\n};\n\nTitle.defaultProps = {\n  align: 'left',\n};\n\nexport default Title;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport Text from 'components/atoms/Text';\nimport { LinkComponent } from 'components/atoms/Link';\nimport Icon, { IconComponent } from 'components/atoms/Icon';\nimport generateImageLink from 'utilities/imageLinkGenerator';\n\nexport interface PortfolioItemProps {\n  type: 'project' | 'activity';\n  index: number;\n  title: string;\n  content: string;\n  image: string;\n}\n\nconst Index = styled(Text)`\n  font-size: 25px;\n  font-weight: 700;\n`;\n\nconst ImageBox = styled(LinkComponent)`\n  width: 100%;\n  height: 200px;\n  margin: 10px 0;\n  position: relative;\n\n  ${IconComponent} {\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.7);\n    position: absolute;\n    display: grid;\n    place-items: center;\n    transition: 0.1s opacity;\n    opacity: 0;\n  }\n\n  &:hover {\n    ${IconComponent} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst Title = styled(Text)`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 3px;\n`;\n\nconst Content = styled.div`\n  font-size: 15px;\n  font-weight: 400;\n  height: 3rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-wrap: break-word;\n`;\n\nconst PortfolioItemComponent = styled.div``;\n\nconst PortfolioItem: FunctionComponent<PortfolioItemProps> = function ({\n  type,\n  index,\n  title,\n  content,\n  image,\n}) {\n  const portfolioIndex: string = (index < 10 ? '0' : '') + index;\n\n  return (\n    <PortfolioItemComponent>\n      <Index>{portfolioIndex}.</Index>\n\n      <ImageBox to={`/portfolio/${type}/${index}`}>\n        <Icon type=\"search\" color=\"#ffffff\" size={30} />\n        <Image src={generateImageLink(image)} alt=\"Portfolio Item Image\" />\n      </ImageBox>\n\n      <Title>{title}</Title>\n      <Content>{content}</Content>\n    </PortfolioItemComponent>\n  );\n};\n\nexport default PortfolioItem;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport Text from 'components/atoms/Text';\nimport PortfolioItem from 'components/molecules/PortfolioItem';\nimport shortId from 'utilities/shortId';\n\nexport interface PortfolioListProps {\n  type: 'project' | 'activity';\n  title: string;\n  list: [\n    {\n      title: string;\n      content: string;\n      image: string;\n    },\n  ];\n}\n\nexport const PortfolioListComponent = styled.div`\n  & + & {\n    margin-top: 120px;\n  }\n`;\n\nconst Title = styled(Text)`\n  font-size: 40px;\n  font-weight: 700;\n  margin-bottom: 60px;\n`;\n\nconst List = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 30px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst PortfolioList: FunctionComponent<PortfolioListProps> = function ({ type, title, list }) {\n  return (\n    <PortfolioListComponent>\n      <Title>#{title}</Title>\n\n      <List>\n        {list.map((props, index) => (\n          <PortfolioItem {...props} type={type} index={index + 1} key={shortId()} />\n        ))}\n      </List>\n    </PortfolioListComponent>\n  );\n};\n\nexport default PortfolioList;\n","import React, { FunctionComponent } from 'react';\nimport Title from 'components/molecules/Title';\nimport PortfolioList from 'components/organisms/PortfolioList';\nimport PageTemplate from 'components/templates/PageTemplate';\nimport PORTFOLIO_LIST from '../../../static/PortfolioList.json';\n\nconst Portfolio: FunctionComponent<{}> = function ({}) {\n  return (\n    <PageTemplate>\n      <Title title=\"Portfolio.\" subTitle=\"My Projects & Activities\" />\n      <PortfolioList type=\"project\" title=\"Projects\" list={PORTFOLIO_LIST.project} />\n      <PortfolioList type=\"activity\" title=\"Activities\" list={PORTFOLIO_LIST.activity} />\n    </PageTemplate>\n  );\n};\n\nexport default Portfolio;\n","import React, { FunctionComponent } from 'react';\nimport Layout from 'components/templates/Layout';\nimport Portfolio from 'components/templates/Portfolio';\n\nconst PortfolioPage: FunctionComponent<{}> = function ({}) {\n  return (\n    <Layout>\n      <Portfolio />\n    </Layout>\n  );\n};\n\nexport default PortfolioPage;\n","function generateImageLink(image: string): string {\n  return `../../portfolio_images/${image}`;\n}\n\nexport default generateImageLink;\n"],"sourceRoot":""}