{"version":3,"sources":["webpack:///./src/components/molecules/IconList.tsx","webpack:///./src/components/organisms/Header.tsx","webpack:///./src/components/molecules/SideMenu.tsx","webpack:///./src/components/molecules/IntroductionText.tsx","webpack:///./src/components/organisms/Introduction.tsx","webpack:///./src/components/templates/Main.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/molecules/NavBar.tsx"],"names":["IconListComponent","IconList","list","size","map","href","type","key","shortId","rel","target","aria-label","HeaderComponent","NavBarComponent","Title","Text","Header","modeSwitch","SideMenuComponent","TextComponent","LinkComponent","SwitchText","IconComponent","SideMenu","currentMode","setCurrentMode","useState","useEffect","window","localStorage","getItem","Link","to","onClick","toggledMode","document","body","classList","remove","add","setItem","Icon","MainText","SubText","IntroductionText","IntroductionComponent","ProfileImage","Img","RightIntroduction","Introduction","image","iconList","fixed","INTRODUCTION_ICON_LIST","MainComponent","MainContentComponent","MainFooterComponent","Main","IndexPage","data","site","siteMetadata","title","description","siteUrl","imageSharp","Layout","url","metadataQuery","NavBar"],"mappings":"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","file":"component---src-pages-index-tsx-de68197dcd29cd849636.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport Icon, { IconProps } from 'components/atoms/Icon';\nimport styled from '@emotion/styled';\nimport { shortId } from 'utilities/utils';\n\nexport type IconInfoObjType = {\n  href: string;\n  type: IconProps['type'];\n};\n\nexport interface IconListProps {\n  list: IconInfoObjType[];\n  size: number;\n}\n\nexport const IconListComponent = styled.div`\n  display: flex;\n\n  a + a {\n    margin-left: 20px;\n\n    @media (max-width: 768px) {\n      margin-left: 15px;\n    }\n  }\n`;\n\nconst IconList: FunctionComponent<IconListProps> = function ({ list, size }) {\n  return (\n    <IconListComponent>\n      {list &&\n        list.map(({ href, type }: IconInfoObjType) => {\n          return (\n            <a href={href} key={shortId()} rel=\"noreferrer\" target=\"_blank\" aria-label={type}>\n              <Icon type={type} size={size} />\n            </a>\n          );\n        })}\n    </IconListComponent>\n  );\n};\n\nexport default IconList;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport Text from 'components/atoms/Text';\nimport NavBar, { NavBarComponent } from 'components/molecules/NavBar';\n\nexport const HeaderComponent = styled.header`\n  width: 768px;\n  height: 80px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    padding: 0 20px;\n    width: 100%;\n\n    ${NavBarComponent} {\n      width: 100%;\n      justify-content: space-between;\n    }\n  }\n`;\n\nconst Title = styled(Text)`\n  font-size: 17px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst Header: FunctionComponent = function ({}) {\n  return (\n    <HeaderComponent>\n      <Title>Too Early To Stop</Title>\n      <NavBar modeSwitch={true} />\n    </HeaderComponent>\n  );\n};\n\nexport default Header;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Icon, { IconComponent } from 'components/atoms/Icon';\nimport Link, { LinkComponent } from 'components/atoms/Link';\nimport Text, { TextComponent } from 'components/atoms/Text';\nimport styled from '@emotion/styled';\n\nconst MODE_STORAGE_KEY = 'blog-current-mode';\n\nexport const SideMenuComponent = styled.div`\n  display: flex;\n  width: 20px;\n  font-weight: 300;\n  margin-left: auto;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  writing-mode: vertical-rl;\n\n  ${TextComponent} {\n    cursor: pointer;\n  }\n\n  ${LinkComponent} + ${TextComponent},\n  ${LinkComponent} + ${LinkComponent} {\n    margin-top: 30px;\n  }\n`;\n\nconst SwitchText = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 30px;\n  font-size: 16px;\n  cursor: pointer;\n  padding: 5px 2px;\n  border-radius: 3px;\n  background: var(--color);\n  color: var(--background);\n\n  ${IconComponent} {\n    margin-bottom: 3px;\n    padding-left: 0.5px;\n    transform: rotate(90deg);\n  }\n`;\n\nconst SideMenu: FunctionComponent = function ({}) {\n  const [currentMode, setCurrentMode] = useState<string | null>();\n\n  useEffect(() => {\n    setCurrentMode(window.localStorage.getItem(MODE_STORAGE_KEY));\n  }, []);\n\n  const changeMode = () => {\n    const toggledMode = currentMode === 'light' ? 'dark' : 'light';\n\n    if (!currentMode) return;\n\n    window.document.body.classList.remove(currentMode);\n    window.document.body.classList.add(toggledMode);\n\n    window.localStorage.setItem(MODE_STORAGE_KEY, toggledMode);\n    setCurrentMode(toggledMode);\n  };\n\n  return (\n    <SideMenuComponent>\n      <Link to=\"/\">\n        <Text>Main</Text>\n      </Link>\n      <Link to=\"/about/\">\n        <Text>About</Text>\n      </Link>\n      <Link to=\"/portfolio/\">\n        <Text>Portfolio</Text>\n      </Link>\n      <Link to=\"/blog/1\">\n        <Text>Blog</Text>\n      </Link>\n      <SwitchText onClick={changeMode}>\n        <Icon type={currentMode === 'light' ? 'moon' : 'sun'} size={11} />{' '}\n        {currentMode === 'light' ? 'Dark' : 'Light'}\n      </SwitchText>{' '}\n    </SideMenuComponent>\n  );\n};\n\nexport default SideMenu;\n","import React, { FunctionComponent } from 'react';\nimport Text from 'components/atoms/Text';\nimport styled from '@emotion/styled';\n\nconst MainText = styled.h1`\n  font-size: 50px;\n  font-weight: 700;\n  margin-bottom: 10px;\n\n  @media (min-width: 768px) and (max-width: 1200px) {\n    font-size: 35px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 25px;\n  }\n`;\n\nconst SubText = styled(Text)`\n  font-size: 25px;\n  font-weight: 300;\n\n  @media (min-width: 769px) and (max-width: 1200px) {\n    font-size: 20px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`;\n\nconst IntroductionText: FunctionComponent = function ({}) {\n  return (\n    <div>\n      <MainText>Hello, I am Ju Hyeon Do</MainText>\n      <SubText>I am a Junior Full-Stack Developer,</SubText>\n      <SubText>hoping to become Professional Developer</SubText>\n    </div>\n  );\n};\n\nexport default IntroductionText;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport IconList, { IconListComponent, IconListProps } from 'components/molecules/IconList';\nimport IntroductionText from 'components/molecules/IntroductionText';\nimport Img, { FixedObject } from 'gatsby-image';\n\ninterface IntroductionProps {\n  image: FixedObject;\n  iconList: IconListProps['list'];\n}\n\nexport const IntroductionComponent = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 1200px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst ProfileImage = styled(Img)`\n  border-radius: 50%;\n  margin-right: 30px;\n\n  @media (max-width: 1200px) and (min-width: 769px) {\n    margin-right: 0;\n    margin-bottom: 20px;\n    width: 150px !important;\n    height: 150px !important;\n  }\n\n  @media (max-width: 768px) {\n    margin-right: 0;\n    margin-bottom: 20px;\n    width: 120px !important;\n    height: 120px !important;\n  }\n`;\n\nconst RightIntroduction = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${IconListComponent} {\n    margin-top: 30px;\n  }\n\n  @media (max-width: 1200px) {\n    ${IconListComponent} {\n      display: none;\n    }\n  }\n`;\n\nconst Introduction: FunctionComponent<IntroductionProps> = function ({ image, iconList }) {\n  return (\n    <IntroductionComponent>\n      <ProfileImage fixed={image} />\n\n      <RightIntroduction>\n        <IntroductionText />\n        <IconList list={iconList} size={30} />\n      </RightIntroduction>\n    </IntroductionComponent>\n  );\n};\n\nexport default Introduction;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport SideMenu, { SideMenuComponent } from 'components/molecules/SideMenu';\nimport IconList, { IconListProps } from 'components/molecules/IconList';\nimport Introduction from 'components/organisms/Introduction';\nimport Header, { HeaderComponent } from 'components/organisms/Header';\nimport { FixedObject } from 'gatsby-image';\n\nconst INTRODUCTION_ICON_LIST: IconListProps['list'] = [\n  { href: 'https://github.com/ji5485', type: 'github' },\n  { href: 'https://www.instagram.com/hello_d0o/', type: 'instagram' },\n  { href: 'https://www.facebook.com/people/주현도/100006799395407', type: 'facebook' },\n];\n\ninterface MainProps {\n  image: FixedObject;\n}\n\nconst MainComponent = styled.div`\n  max-width: 1200px;\n  min-height: 100vh;\n  margin: 0 auto;\n  padding: 60px 0;\n  display: grid;\n  align-items: center;\n\n  @media (max-width: 1200px) {\n    padding: 0 60px;\n    grid-template-rows: 80px minmax(400px, auto) 80px;\n  }\n\n  @media (max-width: 768px) {\n    padding: 0 20px;\n  }\n\n  ${HeaderComponent} {\n    display: none;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n\n    @media (max-width: 1200px) {\n      display: flex;\n      width: 100%;\n    }\n  }\n`;\n\nconst MainContentComponent = styled.main`\n  flex: 1;\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 1200px) {\n    justify-content: space-between;\n\n    ${SideMenuComponent} {\n      display: none;\n    }\n  }\n`;\n\nconst MainFooterComponent = styled.div`\n  height: 100%;\n  display: none;\n  align-items: center;\n\n  @media (max-width: 1200px) {\n    display: flex;\n  }\n`;\n\nconst Main: FunctionComponent<MainProps> = function ({ image }) {\n  return (\n    <MainComponent>\n      <Header />\n\n      <MainContentComponent>\n        <Introduction image={image} iconList={INTRODUCTION_ICON_LIST} />\n        <SideMenu />\n      </MainContentComponent>\n\n      <MainFooterComponent>\n        <IconList list={INTRODUCTION_ICON_LIST} size={20} />\n      </MainFooterComponent>\n    </MainComponent>\n  );\n};\n\nexport default Main;\n","import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from 'components/templates/Layout';\nimport Main from 'components/templates/Main';\nimport { FixedObject } from 'gatsby-image';\n\ninterface IndexPageProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        siteUrl: string;\n      };\n    };\n    imageSharp: {\n      fixed: FixedObject;\n    };\n  };\n}\n\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    imageSharp: { fixed },\n  },\n}) {\n  return (\n    <Layout title={title} description={description} url={siteUrl}>\n      <Main image={fixed} />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const metadataQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    imageSharp(fixed: { originalName: { eq: \"main_image.jpeg\" } }) {\n      fixed(width: 200, height: 200, quality: 80) {\n        ...GatsbyImageSharpFixed_withWebp\n      }\n    }\n  }\n`;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport Icon, { IconComponent } from 'components/atoms/Icon';\nimport Link, { LinkComponent } from 'components/atoms/Link';\nimport Text, { TextComponent } from 'components/atoms/Text';\n\ninterface NavBarProps {\n  modeSwitch: boolean;\n}\n\nconst MODE_STORAGE_KEY = 'blog-current-mode';\n\nexport const NavBarComponent = styled.div`\n  display: flex;\n  align-items: center;\n  font-weight: 300;\n\n  ${TextComponent} {\n    cursor: pointer;\n    font-size: 15px;\n  }\n\n  ${LinkComponent} + ${TextComponent},\n  ${LinkComponent} + ${LinkComponent} {\n    margin-left: 20px;\n  }\n\n  @media (max-width: 768px) {\n    ${TextComponent} {\n      font-size: 13px;\n    }\n  }\n`;\n\nconst SwitchText = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n  font-size: 15px;\n  cursor: pointer;\n  padding: 2px 5px;\n  border-radius: 3px;\n  background: var(--color);\n  color: var(--background);\n\n  ${IconComponent} {\n    margin-right: 3px;\n    padding-bottom: 0.5px;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 13px;\n\n    ${IconComponent} {\n      padding-bottom: 0;\n    }\n  }\n`;\n\nconst NavBar: FunctionComponent<NavBarProps> = function ({ modeSwitch }) {\n  const [currentMode, setCurrentMode] = useState<string | null>();\n\n  useEffect(() => {\n    setCurrentMode(window.localStorage.getItem(MODE_STORAGE_KEY));\n  }, []);\n\n  const changeMode = () => {\n    const toggledMode = currentMode === 'light' ? 'dark' : 'light';\n\n    if (!currentMode) return;\n\n    window.document.body.classList.remove(currentMode);\n    window.document.body.classList.add(toggledMode);\n\n    window.localStorage.setItem(MODE_STORAGE_KEY, toggledMode);\n    setCurrentMode(toggledMode);\n  };\n\n  return (\n    <NavBarComponent>\n      <Link to=\"/\">\n        <Text>Main</Text>\n      </Link>\n      <Link to=\"/about/\">\n        <Text>About</Text>\n      </Link>\n      <Link to=\"/portfolio/\">\n        <Text>Portfolio</Text>\n      </Link>\n      <Link to=\"/blog/1\">\n        <Text>Blog</Text>\n      </Link>\n      {modeSwitch && (\n        <SwitchText onClick={changeMode}>\n          <Icon type={currentMode === 'light' ? 'moon' : 'sun'} size={11} />{' '}\n          {currentMode === 'light' ? 'Dark' : 'Light'}\n        </SwitchText>\n      )}\n    </NavBarComponent>\n  );\n};\n\nexport default NavBar;\n"],"sourceRoot":""}