{"version":3,"sources":["webpack:///./src/components/molecules/PortfolioDetailDesc.tsx","webpack:///./src/components/molecules/PortfolioDetailInfo.tsx","webpack:///./src/hooks/useWindowSize.tsx","webpack:///./src/components/organisms/PortfolioDetailContent.tsx","webpack:///./src/components/organisms/PortfolioDetailImageList.tsx","webpack:///./src/components/templates/PortfolioDetail.tsx","webpack:///./src/page_template/PortfolioDetailTemplate.tsx"],"names":["PortfolioDetailDescComponent","Title","Text","Desc","PortfolioDetailDesc","title","content","PortfoiloDetailInfoComponent","TextComponent","PortfolioDetailInfo","subTitle","period","useWindowSize","windowSize","setWindowSize","useState","width","undefined","height","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","PortfolioDetailContentComponent","Content","Image","Img","StyledButton","LinkComponent","IconComponent","Description","StyledLine","PortfolioDetailContent","info","contents","image","to","Icon","type","fluid","alt","map","item","key","shortId","PortfolioDetailImageListComponent","PortfolioDetailImageList","list","PortfolioDetailComponent","PortfolioDetail","detail","description","review","extraImage","PortfolioDetailTemplate","data","portfolioMetadata","Layout","getPortfolioDetailById"],"mappings":"kPASO,MAAMA,EAA+B,mBAAH,wDAAG,CAAH,IAEnCC,EAAQ,YAAOC,IAAP,mCAAH,4EAMLC,EAAO,YAAOD,IAAP,kCAAH,0EAkBKE,MAZ0D,UAAU,MACjFC,EADiF,QAEjFC,IAEA,OACE,YAACN,EAAD,KACE,YAACC,EAAD,KAAQI,GACR,YAACF,EAAD,KAAOG,KCpBN,MAAMC,EAA+B,mBAAH,wDAAG,CAAH,IAEnCN,EAAQ,YAAOC,IAAP,mCAAH,2EAMLC,EAAO,mBAAH,gCAAG,CACTK,IADM,qCAwBKC,MAjB0D,UAAU,MACjFJ,EADiF,SAEjFK,EAFiF,OAGjFC,IAEA,OACE,YAACJ,EAAD,KACE,YAAC,EAAD,KAAQF,GAER,YAAC,EAAD,KACE,YAACH,EAAA,EAAD,KAAOQ,GACP,YAACR,EAAA,EAAD,KAAOS,MCNAC,MA1Bf,WAGE,MAAOC,EAAYC,GAAiBC,mBAAS,CAC3CC,WAAOC,EACPC,YAAQD,IAkBV,OAfAE,oBAAU,KACR,SAASC,IACPN,EAAc,CACZE,MAAOK,OAAOC,WACdJ,OAAQG,OAAOE,cAQnB,OAJAF,OAAOG,iBAAiB,SAAUJ,GAElCA,IAEO,IAAMC,OAAOI,oBAAoB,SAAUL,IACjD,IAEIP,G,gPCNT,MAAMa,EAAkC,mBAAH,2DAAG,CAAH,yKAY/BC,EAAU,mBAAH,mCAAG,CAAH,8DAKPC,EAAQ,YAAOC,IAAP,mCAAH,wEAMLC,EAAe,YAAOC,IAAP,0CAAH,wJAUdC,IAVc,iEAkBZA,IAlBY,qBAwBZC,EAAc,mBAAH,uCAAG,CAAH,8CAIXjC,EAJW,IAIuBA,EAJvB,4JAgBXA,EAhBW,IAgBuBA,EAhBvB,uBAsBXkC,EAAa,mBAAH,sCAAG,CAAH,4JA+CDC,MAhCgE,UAAU,KACvFC,EADuF,SAEvFC,EAFuF,MAGvFC,IAEA,MAAM,MAAEtB,GAAUJ,IAElB,OACE,YAACc,EAAD,KACE,YAACC,EAAD,KACE,YAACG,EAAD,CAAcS,GAAG,eACf,YAACC,EAAA,EAAD,CAAMC,KAAK,eAGb,YAAC,EAAwBL,GAExBpB,EAAQ,MAAQ,YAACY,EAAD,CAAOc,MAAOJ,EAAOK,IAAKP,EAAK/B,QAEhD,YAAC4B,EAAD,KACGI,EAASO,IAAKC,GACb,YAAC,EAAD,KAAyBA,EAAzB,CAA+BC,IAAKC,mBAIxC,YAACb,EAAD,OAGDlB,GAAS,MAAQ,YAACY,EAAD,CAAOc,MAAOJ,EAAOK,IAAKP,EAAK/B,UC3HvD,MAAM2C,EAAoC,mBAAH,8DAAG,CAAH,2QA+BxBC,MAZoE,UAAU,KAC3FC,IAEA,OACE,YAACF,EAAD,KACGE,EAAKN,IAAI,EAAGF,WACX,YAAC,IAAD,CAAKA,MAAOA,EAAOC,IAAI,iBAAiBG,IAAKC,mBCdrD,MAAMI,EAA2B,mBAAH,qDAAG,CAAH,2MAoCfC,MApBkD,UAAU,MACzE/C,EACAiC,OAAO,MAAEI,GACTW,QAAQ,SAAE3C,EAAF,OAAYC,EAAZ,YAAoB2C,EAApB,OAAiCC,EAAjC,WAAyCC,KAEjD,OACE,YAACL,EAAD,KACE,YAAC,EAAD,CACEf,KAAM,CAAE/B,QAAOK,WAAUC,UACzB0B,SAAU,CACR,CAAEhC,MAAO,cAAeC,QAASgD,GACjC,CAAEjD,MAAO,SAAUC,QAASiD,IAE9BjB,MAAOI,IAET,YAAC,EAAD,CAA0BQ,KAAMM,MC9BvBC,UAVkE,UAC/EC,MAAM,kBAAEC,KAER,OACE,YAACC,EAAA,EAAD,CAAQvD,MAAM,4BACZ,YAAC,EAAoBsD,KAOpB,MAAME,EAAyB","file":"component---src-page-template-portfolio-detail-template-tsx-e9e8a098c850e475ecbe.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport Text from 'components/atoms/Text';\nimport styled from '@emotion/styled';\n\nexport interface PortfolioDetailDescProps {\n  title: string;\n  content: string;\n}\n\nexport const PortfolioDetailDescComponent = styled.div``;\n\nconst Title = styled(Text)`\n  font-size: 18px;\n  font-weight: 700;\n  margin-bottom: 20px;\n`;\n\nconst Desc = styled(Text)`\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n`;\n\nconst PortfolioDetailDesc: FunctionComponent<PortfolioDetailDescProps> = function ({\n  title,\n  content,\n}) {\n  return (\n    <PortfolioDetailDescComponent>\n      <Title>{title}</Title>\n      <Desc>{content}</Desc>\n    </PortfolioDetailDescComponent>\n  );\n};\n\nexport default PortfolioDetailDesc;\n","import React, { FunctionComponent } from 'react';\nimport Text, { TextComponent } from 'components/atoms/Text';\nimport styled from '@emotion/styled';\n\nexport interface PortfolioDetailInfoProps {\n  title: string;\n  subTitle: string;\n  period: string;\n}\n\nexport const PortfoiloDetailInfoComponent = styled.div``;\n\nconst Title = styled(Text)`\n  font-size: 25px;\n  font-weight: 700;\n  margin-bottom: 5px;\n`;\n\nconst Desc = styled.div`\n  ${TextComponent} {\n    font-size: 15px;\n    font-weight: 300;\n  }\n`;\n\nconst PortfolioDetailInfo: FunctionComponent<PortfolioDetailInfoProps> = function ({\n  title,\n  subTitle,\n  period,\n}) {\n  return (\n    <PortfoiloDetailInfoComponent>\n      <Title>{title}</Title>\n\n      <Desc>\n        <Text>{subTitle}</Text>\n        <Text>{period}</Text>\n      </Desc>\n    </PortfoiloDetailInfoComponent>\n  );\n};\n\nexport default PortfolioDetailInfo;\n","// Source: https://usehooks.com/useWindowSize/\n\nimport { useState, useEffect } from 'react';\n\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nexport default useWindowSize;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { LinkComponent } from 'components/atoms/Link';\nimport Icon, { IconComponent } from 'components/atoms/Icon';\nimport PortfolioDetailDesc, {\n  PortfolioDetailDescProps,\n  PortfolioDetailDescComponent,\n} from 'components/molecules/PortfolioDetailDesc';\nimport PortfolioDetailInfo, {\n  PortfolioDetailInfoProps,\n} from 'components/molecules/PortfolioDetailInfo';\nimport useWindowSize from 'hooks/useWindowSize';\nimport { shortId } from 'utilities/utils';\nimport Img, { FluidObject } from 'gatsby-image';\n\ninterface PortfolioDetailContentProps {\n  info: PortfolioDetailInfoProps;\n  contents: PortfolioDetailDescProps[];\n  image: FluidObject;\n}\n\nconst PortfolioDetailContentComponent = styled.div`\n  width: 100%;\n\n  @media (min-width: 1200px) {\n    display: grid;\n    grid-template-columns: 350px 1fr;\n    grid-gap: 50px;\n    height: calc(100vh - 300px);\n    min-height: 600px;\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Image = styled(Img)`\n  @media (max-width: 1200px) {\n    margin-top: 40px;\n  }\n`;\n\nconst StyledButton = styled(LinkComponent)`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: #1e1f21;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n  display: grid;\n  place-items: center;\n  margin-bottom: 50px;\n\n  ${IconComponent} {\n    font-size: 20px;\n    color: #ffffff;\n  }\n\n  body.dark & {\n    background: #ffffff;\n\n    ${IconComponent} {\n      color: #1e1f21;\n    }\n  }\n`;\n\nconst Description = styled.div`\n  margin-top: 50px;\n\n  @media (min-width: 1200px) {\n    ${PortfolioDetailDescComponent} + ${PortfolioDetailDescComponent} {\n      margin-top: 30px;\n    }\n  }\n\n  @media (min-width: 768px) and (max-width: 1200px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 50px;\n  }\n\n  @media (max-width: 768px) {\n    ${PortfolioDetailDescComponent} + ${PortfolioDetailDescComponent} {\n      margin-top: 30px;\n    }\n  }\n`;\n\nconst StyledLine = styled.div`\n  width: 40%;\n  height: 2px;\n  background: #1e1f21;\n  margin-top: auto;\n\n  body.dark & {\n    background: #ffffff;\n  }\n\n  @media (max-width: 1200px) {\n    display: none;\n  }\n`;\n\nconst PortfolioDetailContent: FunctionComponent<PortfolioDetailContentProps> = function ({\n  info,\n  contents,\n  image,\n}) {\n  const { width } = useWindowSize();\n\n  return (\n    <PortfolioDetailContentComponent>\n      <Content>\n        <StyledButton to=\"/portfolio/\">\n          <Icon type=\"arrowLeft\" />\n        </StyledButton>\n\n        <PortfolioDetailInfo {...info} />\n\n        {width < 1200 && <Image fluid={image} alt={info.title} />}\n\n        <Description>\n          {contents.map((item: PortfolioDetailDescProps) => (\n            <PortfolioDetailDesc {...item} key={shortId()} />\n          ))}\n        </Description>\n\n        <StyledLine />\n      </Content>\n\n      {width >= 1200 && <Image fluid={image} alt={info.title} />}\n    </PortfolioDetailContentComponent>\n  );\n};\n\nexport default PortfolioDetailContent;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { shortId } from 'utilities/utils';\nimport Img, { FluidObject } from 'gatsby-image';\n\ninterface PortfolioDetailImageListProps {\n  list: [{ fluid: FluidObject }];\n}\n\nconst PortfolioDetailImageListComponent = styled.div`\n  display: grid;\n  grid-gap: 50px;\n  grid-template-columns: 1fr 1fr;\n\n  @media (min-width: 1200px) {\n    margin-top: 250px;\n  }\n\n  @media (min-width: 768px) and (max-width: 1200px) {\n    margin-top: 100px;\n  }\n\n  @media (max-width: 768px) {\n    margin-top: 100px;\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst PortfolioDetailImageList: FunctionComponent<PortfolioDetailImageListProps> = function ({\n  list,\n}) {\n  return (\n    <PortfolioDetailImageListComponent>\n      {list.map(({ fluid }) => (\n        <Img fluid={fluid} alt=\"Activity Image\" key={shortId()} />\n      ))}\n    </PortfolioDetailImageListComponent>\n  );\n};\n\nexport default PortfolioDetailImageList;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport PortfolioDetailContent from 'components/organisms/PortfolioDetailContent';\nimport PortfolioDetailImageList from 'components/organisms/PortfolioDetailImageList';\nimport { FluidObject } from 'gatsby-image';\n\nexport interface PortfolioDetailProps {\n  title: string;\n  image: {\n    fluid: FluidObject;\n  };\n  detail: {\n    subTitle: string;\n    period: string;\n    description: string;\n    review: string;\n    extraImage: [{ fluid: FluidObject }];\n  };\n}\n\nconst PortfolioDetailComponent = styled.div`\n  @media (min-width: 1200px) {\n    width: 1200px;\n    margin: 0 auto;\n    padding: 150px 0;\n  }\n\n  @media (min-width: 768px) and (max-width: 1200px) {\n    padding: 80px;\n  }\n\n  @media (max-width: 768px) {\n    padding: 20px;\n  }\n`;\n\nconst PortfolioDetail: FunctionComponent<PortfolioDetailProps> = function ({\n  title,\n  image: { fluid },\n  detail: { subTitle, period, description, review, extraImage },\n}) {\n  return (\n    <PortfolioDetailComponent>\n      <PortfolioDetailContent\n        info={{ title, subTitle, period }}\n        contents={[\n          { title: 'Description', content: description },\n          { title: 'Review', content: review },\n        ]}\n        image={fluid}\n      />\n      <PortfolioDetailImageList list={extraImage} />\n    </PortfolioDetailComponent>\n  );\n};\n\nexport default PortfolioDetail;\n","import React, { FunctionComponent } from 'react';\nimport Layout from 'components/templates/Layout';\nimport PortfolioDetail, { PortfolioDetailProps } from 'components/templates/PortfolioDetail';\nimport { graphql } from 'gatsby';\n\ninterface PortfolioDetailTemplateProps {\n  data: {\n    portfolioMetadata: PortfolioDetailProps;\n  };\n}\n\nconst PortfolioDetailTemplate: FunctionComponent<PortfolioDetailTemplateProps> = function ({\n  data: { portfolioMetadata },\n}) {\n  return (\n    <Layout title=\"Detail of This Portfolio\">\n      <PortfolioDetail {...portfolioMetadata} />\n    </Layout>\n  );\n};\n\nexport default PortfolioDetailTemplate;\n\nexport const getPortfolioDetailById = graphql`\n  query getPortfolioDetailById($portfolioId: String) {\n    portfolioMetadata(id: { eq: $portfolioId }) {\n      title\n      image {\n        fluid(maxWidth: 1600, fit: CONTAIN, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n      detail {\n        subTitle\n        period\n        description\n        review\n        extraImage {\n          fluid(maxWidth: 570, fit: CONTAIN, quality: 100) {\n            ...GatsbyImageSharpFluid_withWebp\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}